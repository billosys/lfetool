#!/bin/sh

# readlink -f doesn't work on Mac OS X, so this hack is needed
absfile () {
    abspath="$(cd "$(dirname "$0")"; pwd)"
    echo $abspath/$(basename $0)
}

CWD=$(pwd)
SCRIPT_PATH=$(readlink $0)
if [ -z $SCRIPT_PATH ]; then
    SCRIPT_PATH=$(absfile $0)
fi
BIN_DIR=$(dirname $SCRIPT_PATH)
EXEC_DIR=$(dirname $BIN_DIR)

lfetooleval () {
    if [ "$1" == "debug" ]; then
        DEBUG="-debug true"
        shift 1
    else
        DEBUG=""
    fi
    cd $EXEC_DIR && ERL_LIBS=$(lfetool info erllibs):~/.lfetool:. \
    erl \
        -cwd "$CWD" \
        -s lfetool \
        $DEBUG \
        -eval "case lfetool:eval(\"$*\") of
                 {ok, Result} ->
                   io:format(\"~s\", [Result]),
                   halt(0);
                 _ -> halt(127)
               end" \
        -noshell
}

run () {
    command=$1
    shift 1
    rest="$@"
    case $command in
        # offer backwards compatibility for flags
        -c)
            command=commands
            rest=""
            ;;
        -d)
            command=debug
            ;;
        -h)
            command=help
            ;;
        -u)
            command=usage
            rest=""
            ;;
        -v)
            command=version
            rest=""
            ;;
        -x)
            command=extract
            rest=""
            ;;
    esac
    lfetooleval $command $rest
}

run "$@"
