#!/bin/bash

template="templates/lfetool/lfetool.tmpl"
temp="lfetool-temp"
dest="lfetool"


fill-tool-var () {
    template=$1
    pattern=$2
    if [ "$pattern" = "" ]; then
        pattern="{{NOOP}}"
    fi
    data=`cat "$template" | base64`
    # DEBUG
    #echo $template
    #echo $pattern
    #echo $data
    sed -e "s#$pattern#$data#g" $dest > $temp
    mv $temp $dest
}

fill-usage () {
    template="templates/lfetool/usage.txt.tmpl"
    pattern="{{USAGE}}"
    fill-tool-var $template $pattern
}

fill-gitignore () {
    template="templates/common/.gitignore.tmpl"
    pattern="{{GITIGNORE}}"
    fill-tool-var $template $pattern
}

fill-rebar () {
    template="templates/common/rebar.config.tmpl"
    pattern="{{REBAR}}"
    fill-tool-var $template $pattern
}

fill-package () {
    template="templates/common/package.exs.tmpl"
    pattern="{{PACKAGE}}"
    fill-tool-var $template $pattern
}

fill-makefile () {
    # base make include
    template="templates/common/common.mk.tmpl"
    pattern="{{COMMONMK}}"
    fill-tool-var $template $pattern
    # otp make include
    template="templates/service/otp.mk.tmpl"
    pattern="{{OTPMK}}"
    fill-tool-var $template $pattern
    # yaws make include
    template="templates/yaws/yaws.mk.tmpl"
    pattern="{{YAWSMK}}"
    fill-tool-var $template $pattern
    # master make file for library projects
    template="templates/library/Makefile.tmpl"
    pattern="{{LIBMAKEFILE}}"
    fill-tool-var $template $pattern
    # master make file for service projects
    template="templates/service/Makefile.tmpl"
    pattern="{{SVCMAKEFILE}}"
    fill-tool-var $template $pattern
    # master make file for yaws projects
    template="templates/yaws/Makefile.tmpl"
    pattern="{{YAWSMAKEFILE}}"
    fill-tool-var $template $pattern
}

fill-travisci () {
    template="templates/common/.travis.yml.tmpl"
    pattern="{{TRAVISCI}}"
    fill-tool-var $template $pattern
}

fill-readme () {
    template="templates/common/README.rst.tmpl"
    pattern="{{README}}"
    fill-tool-var $template $pattern
}

fill-script () {
    template="templates/script/SCRIPT.tmpl"
    pattern="{{SCRIPTFILE}}"
    fill-tool-var $template $pattern
}

fill-libappsrc () {
    template="templates/library/PROJECT.app.src.tmpl"
    pattern="{{LIBAPPSRC}}"
    fill-tool-var $template $pattern
}

fill-libtestmodule () {
    template="templates/common/PROJECT-tests.lfe.tmpl"
    pattern="{{LIBTESTMODULE}}"
    fill-tool-var $template $pattern
}

fill-libmodule () {
    template="templates/common/PROJECT.lfe.tmpl"
    pattern="{{LIBMODULE}}"
    fill-tool-var $template $pattern
}

fill-svcappsrc () {
    template="templates/service/PROJECT.app.src.tmpl"
    pattern="{{SVCAPPSRC}}"
    fill-tool-var $template $pattern
}

fill-svctestmodule () {
    template="templates/service/PROJECT-tests.lfe.tmpl"
    pattern="{{SVCTESTMODULE}}"
    fill-tool-var $template $pattern
}

fill-svcapp () {
    template="templates/service/PROJECT-app.lfe.tmpl"
    pattern="{{SVCAPP}}"
    fill-tool-var $template $pattern
}

fill-svcserver () {
    template="templates/service/PROJECT-server.lfe.tmpl"
    pattern="{{SVCSERVER}}"
    fill-tool-var $template $pattern
}

fill-svcsup () {
    template="templates/service/PROJECT-sup.lfe.tmpl"
    pattern="{{SVCSUP}}"
    fill-tool-var $template $pattern
}

fill-yawsrebar () {
    template="templates/yaws/rebar.config.tmpl"
    pattern="{{YAWSREBAR}}"
    fill-tool-var $template $pattern
}

fill-yawsconf () {
    template="templates/yaws/yaws.conf.tmpl"
    pattern="{{YAWSCONF}}"
    fill-tool-var $template $pattern
}

fill-yawsmodule () {
    template="templates/yaws/PROJECT.lfe.tmpl"
    pattern="{{YAWSMODULE}}"
    fill-tool-var $template $pattern
}

run () {
    cp $template $dest
    fill-usage
    fill-gitignore
    fill-rebar
    fill-package
    fill-makefile
    fill-travisci
    fill-readme
    fill-script
    fill-libappsrc
    fill-libtestmodule
    fill-libmodule
    fill-svcappsrc
    fill-svctestmodule
    fill-svcapp
    fill-svcserver
    fill-svcsup
    fill-yawsrebar
    fill-yawsconf
    fill-yawsmodule
    chmod 755 $dest
}

run
